<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="studentTracking.dao.IStudentDao">
    <sql id="baseSql">
        SELECT
            s.stuId,
            s.stuName,
            s.sex,
            s.nation,
            s.birthday,
            s.birthPlace,
            s.marry,
            s.telephone,
            s.idCard,
            s.university,
            s.major,
            s.email,
            s.photo,
            s.note,
            s.state,
            s.classid,
            s.deptid
    </sql>


    <resultMap id="baseStu" type="Student">
        <id column="stuId" property="stuId"></id>
        <result column="stuName" property="stuName"></result>
        <result column="sex" property="sex"></result>
        <result column="nation" property="nation"></result>
        <result column="birthday" property="birthday"></result>
        <result column="birthPlace" property="birthPlace"></result>
        <result column="marry" property="marry"></result>
        <result column="telephone" property="telephone"></result>
        <result column="idCard" property="idCard"></result>
        <result column="university" property="university"></result>
        <result column="major" property="major"></result>
        <result column="photo" property="photo"></result>
        <result column="note" property="note"></result>
        <result column="state" property="state"></result>
        <result column="classId" property="classId"></result>
        <result column="deptId" property="deptId"></result>
        <collection property="scoreList" javaType="list" ofType="Score">
            <id column="stuId" property="stuId"></id>
            <result column="courseId" property="courseId"></result>
            <result column="score" property="score"></result>
        </collection>
    </resultMap>


    <!--   int studentNumByCondition(@Param("condition") String condition);1-->
    <select id="studentNumByCondition" resultType="int">
        select count(stuId) from student
        <if test="condition != null">
            where stuName like concat("%",#{condition},"%")
        </if>
    </select>


    <!--List<Teacher> studentListByCondition(@Param("page") int page, @Param("limit") int limit, @Param(
            "condition") String condition);1-->

    <select id="studentListByCondition" resultType="student">
        <include refid="baseSql"></include>
        from student s
        <if test="condition != null">
            where s.stuName like concat("%",#{condition},"%")
        </if>
        limit #{page},#{limit}
    </select>


    <!--boolean addStudent(Student student);1-->
    <insert id="addStudent" parameterType="student" keyColumn="stuId" keyProperty="stuId"
            useGeneratedKeys="true">
        insert into student
        (stuName, sex, nation, birthday, birthPlace, marry, telephone, idCard, university,
         major, email, photo, note, state)
         values
         (#{stuName},#{sex},#{nation},#{birthday},#{birthPlace},#{marry},#{telephone},#{idCard},#{university},
        #{major},#{email},#{photo},#{note}, #{state})
    </insert>


    <!-- Student getStudentById(int stuId);1-->
    <select id="getStudentById" resultType="student">
        <include refid="baseSql"></include>
        from student s
        where s.stuId = #{stuId}
    </select>

    <!-- boolean delStudent(int stuId);1-->
    <delete id="delStudent">
        delete from student where  stuId = #{stuId}
    </delete>

    <!--boolean updateStudent(Student student);1-->
    <update id="updateStudent" parameterType="student">
        update student set
        stuName = #{stuName},
        sex  =#{sex},
        nation =#{nation},
        birthday =#{birthday},
        birthPlace =#{birthPlace},
        marry =#{marry},
        telephone =#{telephone},
        idCard =#{idCard},
        university =#{university},
        major =#{major},
        email=#{email},
        photo =#{photo},
        note =#{note},
        state =#{state}
        where stuId =#{stuId}
    </update>


    <!--int stuNumByCondition(QueryObject qo); 1-->
    <select id="stuNumByCondition" resultType="int">
        SELECT
        count(s.stuId)
        FROM
        student s
        LEFT JOIN class c ON s.classId = c.classId
        LEFT JOIN teacher t ON c.teacherId = t.teacherId
        <where>
            <if test="stuName != null">
                s.stuName like concat("%",#{stuName},"%")
            </if>
            <if test="tname != null">
                and t.tname like concat("%",#{tname},"%")
            </if>
            <if test="stuState != -1">
                and s.state = #{stuState}
            </if>
            <if test="classId != -1">
                and c.classId = #{classId}
            </if>
            <if test="classId != -1">
                and c.classId = #{classId}
            </if>
            <if test="clzState != -1">
                and c.state = #{clzState}
            </if>
        </where>

    </select>
    <!--1-->
    <resultMap id="stu" type="student">
        <id column="stuId" property="stuId"></id>
        <result column="stuName" property="stuName"></result>
        <result column="sstate" property="state"></result>
        <association property="teacher" javaType="teacher">
            <id column="teacherId" property="teacherId"></id>
            <result column="tname" property="tname"></result>
        </association>
        <association property="clz" javaType="Class">
            <id column="classId" property="classId"></id>
            <result column="className" property="className"></result>
            <result column="cstate" property="state"></result>
        </association>
    </resultMap>

    <!-- List<Student> stuByCondition(QueryObject qo); 1-->
    <select id="stuByCondition" resultMap="stu">
        SELECT
        s.stuId,
        s.stuName,
        s.state AS sstate,
        c.className,
        c.classId,
        c.state AS cstate,
        t.tname,
        t.teacherId
        FROM
        student s
        LEFT JOIN class c ON s.classId = c.classId
        LEFT JOIN teacher t ON c.teacherId = t.teacherId
        <where>
            <if test="stuName != null">
                s.stuName like concat("%",#{stuName},"%")
            </if>
            <if test="tname != null">
                and t.tname like concat("%",#{tname},"%")
            </if>
            <if test="stuState != -1">
                and s.state = #{stuState}
            </if>
            <if test="classId != -1">
                and c.classId = #{classId}
            </if>
            <if test="teacherId > 0">
                and c.teacherId = #{teacherId}
            </if>
            <if test="clzState != -1">
                and c.state = #{clzState}
            </if>
        </where>
        limit #{page},#{limit}
    </select>


    <!--  boolean updateStuClassId(int[] stuids, int classId);1-->
    <update id="updateStuClassId">
        update student set classId = #{classId},state=#{state} where stuId in
        <foreach collection="stuids" separator="," open="(" close=")" item="stuId">
            #{stuId}
        </foreach>
    </update>

    <!-- boolean resetStuClassByStuId(int stuId);1-->
    <update id="resetStuClassByStuId">
        update student set state = 0 where stuId = #{stuId}
    </update>


</mapper>
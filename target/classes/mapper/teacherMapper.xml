<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="studentTracking.dao.ITeacherDao">


    <sql id="basesql">
        teacherId,tname,sex,birthday,phone,idCard,photo
    </sql>

    <!--int teacherNumByCondition(@Param("condition") String condition);1-->
    <select id="teacherNumByCondition" resultType="int">
        select count(teacherId) from teacher
        <if test="condition != null">
            where tname like concat("%",#{condition},"%")
        </if>
    </select>

    <!--List<Teacher> teacherListByCondition(@Param("page") int page, @Param("limit") int limit, @Param(
                "condition") String condition);1-->
    <select id="teacherListByCondition" resultType="teacher">
        select
        <include refid="basesql"></include>
        from teacher
        <if test="condition != null">
            where tname like concat("%",#{condition},"%")
        </if>
        limit #{page},#{limit}
    </select>

    <!--  boolean addTeacher(Teacher teacher);1-->
    <insert id="addTeacher" parameterType="teacher" useGeneratedKeys="true" keyColumn="teacherId"
            keyProperty="teacherId">
        insert into teacher  (tname,sex,birthday,phone,idCard,photo)
         values (#{tname},#{sex},#{birthday},#{phone},#{idCard},#{photo});
    </insert>

    <!--  boolean delTeacher(int teacherId);1-->
    <delete id="delTeacher">
        delete  from  teacher where  teacherId = #{teacherId}
    </delete>

    <!--Teacher getTeacherById(int teacherId);1-->
    <select id="getTeacherById" resultType="teacher">
        select
        <include refid="basesql"></include>
        from teacher where teacherId = #{teacherId}
    </select>

    <!--boolean updateTeacher(Teacher teacher);1-->
    <update id="updateTeacher" parameterType="teacher">
        update teacher set
        tname = #{tname},sex = #{sex},birthday = #{birthday},phone = #{phone},
        idCard = #{idCard},photo = #{photo}
        where
        teacherId = #{teacherId}
    </update>

    <!--List<Teacher> getAllTeacher();1-->
    <select id="getAllTeacher" resultType="teacher">
        select
        <include refid="basesql"></include>
        from teacher
    </select>


</mapper>